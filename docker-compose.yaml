version: "3.9"
services:
  nginx:
    image: nginx
    ports:
      - "${NGINX_EXTERNAL_PORT}:80"
    volumes:
      - "./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./docker/nginx/log:/var/log/nginx"
      - "./app:/var/www/html"
    depends_on:
      - php
      - mysql
      - node
    deploy:
      resources:
        limits:
          memory: 1g
    environment:
      TZ: $TZ
  php:
    build:
      context: ./docker/php
      args:
        USER_UUID: "${USER_UUID}"
        GROUP_UUID: "${GROUP_UUID}"
    volumes:
      - "./app:/var/www/html"
    expose:
      - 9000
    depends_on:
      mysql:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 2g
    environment:
      TZ: $TZ
  mysql:
    image: mysql:8.0.30
    environment:
      MYSQL_DATABASE: "${DATABASE_NAME}"
      MYSQL_ROOT_PASSWORD: "${DATABASE_ROOT_PASSWORD}"
      TZ: $TZ
    ports:
      - "${MYSQL_EXTERNAL_PORT}:3306"
    command: mysqld --sql_mode=""
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=${DATABASE_ROOT_PASSWORD} --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 60
    deploy:
      resources:
        limits:
          memory: 2g
  node:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
      args:
        WORK_DIR: "/var/www/html"
    command: /var/www/cache/entrypoint.sh /var/www/html
    volumes:
      - "./app:/var/www/html"
      - "./docker/node/entrypoint.sh:/var/www/html/../cache/entrypoint.sh"
    ports:
      - "${NODE_EXTERNAL_PORT}:3000"
    environment:
      NODE_ENV: development
      TZ: $TZ
    deploy:
      resources:
        limits:
          memory: 1g
